input {
  jdbc {
    jdbc_driver_library => "./mysql-connector-java-5.1.47/mysql-connector-java-5.1.47-bin.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://192.168.0.229:3306/bi"
    jdbc_user => "bi"
    jdbc_password => "123456"
    schedule => "* * * * *"
    statement => "SELECT * FROM task_log WHERE create_at >= :sql_last_value  order by create_at limit 200000"
    use_column_value => true
    #tracking_column_type => "numeric"
    tracking_column_type => "timestamp"
    tracking_column => "create_at"
    last_run_metadata_path => "syncpoint_table_task_log"
    #处理中文乱码问题
    codec => plain { charset => "UTF-8"}

    #使用其它字段追踪，而不是用时间
    #use_column_value => true
    #追踪的字段
    #tracking_column => src_phone
    record_last_run => true
    #上一个sql_last_value值的存放文件路径, 必须要在文件中指定字段的初始值
    #last_run_metadata_path => "mysql/station_parameter.txt"
    jdbc_default_timezone => "Asia/Shanghai"
  }
}
output {
  file{
    path => "/tmp/%{+YYYY.MM.dd}-file.txt"
  }
  jdbc {
    jdbc_driver_library => "./mysql-connector-java-5.1.47/mysql-connector-java-5.1.47-bin.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://192.168.0.229:3306/bi"
    jdbc_user => "bi"
    jdbc_password => "123456"
    statement => [ "INSERT INTO test (name, result) VALUES(?, ?)", "name", "result" ]
  }
}
