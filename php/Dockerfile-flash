FROM flashexpress/php:72-phalcon-s-m-r AS build

LABEL maintainer="flashexpress-php"
#docker build -t flashexpress/php -f Dockerfile-flash .
ENV TIME_ZONE=Asia/Shanghai

RUN apk update && apk add  --no-cache --virtual .build-deps \
    icu \
    icu-dev \
    icu-libs \
    g++ make autoconf \
    libxml2-dev \
    php7-pear \
    php-gd \
    php7-intl \
    php7-sockets \
    linux-headers \
    libzip-dev \
    curl-dev \
    git \
    #gd
    freetype-dev \
    libjpeg-turbo-dev \
    libmcrypt-dev \
    libpng-dev \
    libmcrypt-dev \
    libpng-dev \
    tzdata \
    #设置时区
    && echo "${TIME_ZONE}" > /etc/timezone \
    && ln -sf /usr/share/zoneinfo/${TIME_ZONE} /etc/localtime

RUN docker-php-ext-install -j"$(getconf _NPROCESSORS_ONLN)" iconv \
    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
    && docker-php-ext-install -j"$(getconf _NPROCESSORS_ONLN)" gd

RUN docker-php-ext-install \
    bcmath \
    intl \
    pdo \
    pdo_mysql \
    pcntl \
    xml \
    zip \
    mysqli \
    sockets

# molten
RUN git clone --depth=1 https://github.com/chuan-yun/Molten.git /usr/src/php/ext/molten \
    && docker-php-ext-configure molten --enable-zipkin-header=yes \
    && docker-php-ext-install -j$(nproc) zip pdo_mysql molten

RUN pecl install mcrypt \
    && docker-php-ext-enable mcrypt

RUN  rm -rf /var/cache/apk/*

#运行迷你容器
FROM php:7.2-fpm-alpine

ENV TIME_ZONE=Asia/Shanghai


#这步骤是关键
COPY --from=build /usr/lib /usr/lib
COPY --from=build /usr/local/etc/php/conf.d /usr/local/etc/php/conf.d
COPY --from=build /usr/local/lib/php/extensions/no-debug-non-zts-20170718 /usr/local/lib/php/extensions/no-debug-non-zts-20170718

RUN apk update && apk add  --no-cache --virtual .build-deps \
    openssh \
    git \
    bash htop tmux \
    tzdata \
    #设置时区
    && cp /usr/share/zoneinfo/${TIME_ZONE} /etc/localtime

# 安装composer并允许root用户运行
ENV COMPOSER_ALLOW_SUPERUSER=1
ENV COMPOSER_NO_INTERACTION=1
ENV COMPOSER_HOME=/usr/local/share/composer
RUN mkdir -p /usr/local/share/composer \
        && curl -o /tmp/composer-setup.php https://getcomposer.org/installer \
        && php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer --snapshot \
        && rm -f /tmp/composer-setup.* \
    # 配置composer中国全量镜像
    && composer config -g repo.packagist composer https://packagist.phpcomposer.com